[
 {
  "shortname": "Test_Certification",
  "longname": "Test Certification",
  "scenario": [
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id (static_id 0 (\"contracts/certification.py\" 6)) \nstorage (record (\"contracts/certification.py\" 6) (certified (type_annotation (big_map (\"contracts/certification.py\" 6) ) (bigmap \"address\" \"string\") (\"contracts/certification.py\" 6))) (certifier (account_of_seed \"Alice\" (\"contracts/certification.py\" 16))))\nstorage_type (())\nmessages ((certify True None None True (\"contracts/certification.py\" 9) ((verify (eq (sender) (attr (data) \"certifier\" (\"contracts/certification.py\" 10)) (\"contracts/certification.py\" 10)) (\"contracts/certification.py\" 10)) (set (getItem (attr (data) \"certified\" (\"contracts/certification.py\" 11)) (attr (params (\"contracts/certification.py\" 9)) \"address\" (\"contracts/certification.py\" 11)) (\"contracts/certification.py\" 11)) (attr (params (\"contracts/certification.py\" 9)) \"name\" (\"contracts/certification.py\" 11)) (\"contracts/certification.py\" 11)))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "(static_id 0 (\"contracts/certification.py\" 6))",
    "line_no": "(\"contracts/certification.py\" 23)",
    "show": true
   },
   {
    "action": "message",
    "id": "(static_id 0 (\"contracts/certification.py\" 6))",
    "line_no": "(\"contracts/certification.py\" 24)",
    "message": "certify",
    "params": "(record (\"contracts/certification.py\" 24) (address (resolve (attr (account_of_seed \"Bob\" (\"contracts/certification.py\" 17)) \"address\" (\"contracts/certification.py\" 17)) (\"contracts/certification.py\" 17))) (name (literal (string \"Bob\") (\"contracts/certification.py\" 24))))",
    "sender": "seed:Alice"
   },
   {
    "action": "message",
    "id": "(static_id 0 (\"contracts/certification.py\" 6))",
    "line_no": "(\"contracts/certification.py\" 25)",
    "message": "certify",
    "params": "(record (\"contracts/certification.py\" 25) (address (resolve (attr (account_of_seed \"Jill\" (\"contracts/certification.py\" 18)) \"address\" (\"contracts/certification.py\" 18)) (\"contracts/certification.py\" 18))) (name (literal (string \"Jill\") (\"contracts/certification.py\" 25))))",
    "sender": "seed:Alice"
   }
  ],
  "kind": "test"
 },
 {
  "shortname": "certification_compiled",
  "longname": "certification_compiled",
  "scenario": [
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id (static_id 0 (\"contracts/certification.py\" 6)) \nstorage (record (\"contracts/certification.py\" 6) (certified (type_annotation (big_map (\"contracts/certification.py\" 6) ) (bigmap \"address\" \"string\") (\"contracts/certification.py\" 6))) (certifier (record (\"contracts/certification.py\" 28) (address (literal (address \"tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb\") (\"contracts/certification.py\" 29))))))\nstorage_type (())\nmessages ((certify True None None True (\"contracts/certification.py\" 9) ((verify (eq (sender) (attr (data) \"certifier\" (\"contracts/certification.py\" 10)) (\"contracts/certification.py\" 10)) (\"contracts/certification.py\" 10)) (set (getItem (attr (data) \"certified\" (\"contracts/certification.py\" 11)) (attr (params (\"contracts/certification.py\" 9)) \"address\" (\"contracts/certification.py\" 11)) (\"contracts/certification.py\" 11)) (attr (params (\"contracts/certification.py\" 9)) \"name\" (\"contracts/certification.py\" 11)) (\"contracts/certification.py\" 11)))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "(static_id 0 (\"contracts/certification.py\" 6))",
    "line_no": "(\"\" -1)",
    "show": true
   }
  ],
  "kind": "compilation"
 }
]